//
//  ResetPwdViewController.m
//  YSProject
//
//  Created by cuiw on 15/5/20.
//  Copyright (c) 2015年 cuiw. All rights reserved.
//

#import "ResetPwdViewController.h"
#import "ResetPwdSecondViewController.h"

@interface ResetPwdViewController ()<UITextFieldDelegate>
{
    int _time;
    NSTimer *_timer;
    CWHttpRequest *_codeRequest;
}
@property (weak, nonatomic) IBOutlet CWTextField *phoneTextField;
@property (weak, nonatomic) IBOutlet CWTextField *codeTextField;
@property (weak, nonatomic) IBOutlet UIButton *codeButton;
@property (weak, nonatomic) IBOutlet UIScrollView *backScrollView;
@end

@implementation ResetPwdViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    UIImage *bgImage = [UIImage imageNamed:@"buttonBg"];
    bgImage = [bgImage resizableImageWithCapInsets:UIEdgeInsetsMake(16, 20, 16, 20)];
    [_codeButton setBackgroundImage:bgImage forState:UIControlStateNormal];
    UIImage *disBgImage =[UIImage imageNamed:@"buttonDisBg"];
    disBgImage = [disBgImage resizableImageWithCapInsets:UIEdgeInsetsMake(16, 20, 16, 20)];
    [_codeButton setBackgroundImage:disBgImage forState:UIControlStateDisabled];
    
    
    UITapGestureRecognizer *tapGesture=[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(resignKeyboard)];
    [self.view addGestureRecognizer:tapGesture];

}
-(void)resignKeyboard
{
    [_phoneTextField resignFirstResponder];
    [_codeTextField resignFirstResponder];
//    if (self.view.frame.origin.y!=0) {
//        [UIView animateWithDuration:0.5 animations:^{
//            self.view.frame=CGRectMake(0, 0, kSCREEN_WIDTH, kSCREEN_HEIGHT);
//        }];
//    }
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
- (IBAction)codeButtonAction:(id)sender {
    NSString *phone = [_phoneTextField.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];
    if (![ValidationUtil isMobileNumber:phone]) {
        [ShowViewCenterViewController showAlertViewWithTitle:nil message:@"请输入正确的手机号" cancelButtonTitle:@"确定" otherButtonTitles:nil delegate:nil cancelBlock:nil otherBlock:nil];
        return;
    }
    [self sendSMSCodeRequest];
}

- (IBAction)submitButtonAction:(id)sender {
    if ([_phoneTextField.text length]==0) {
        [ShowViewCenterViewController showAlertViewWithTitle:nil message:@"请输入手机号" cancelButtonTitle:@"确定" otherButtonTitles:nil delegate:nil cancelBlock:nil otherBlock:nil];
        return;
    }
    if ([_codeTextField.text length] == 0) {
        [ShowViewCenterViewController showAlertViewWithTitle:nil message:@"请输入验证码" cancelButtonTitle:@"确定" otherButtonTitles:nil delegate:nil cancelBlock:nil otherBlock:nil];
        return;
    }
    [self sendSMSLoginRequest];
}

- (void)getCode {
    _time = 60;
    [self.timer setFireDate:[NSDate distantPast]];
}

- (void)countDown {
    _time--;
    if (_time >0) {
        _codeButton.enabled = NO;
        [_codeButton setTitle:[NSString stringWithFormat:@"重新发送(%d)", _time] forState:UIControlStateDisabled];
    } else {
        [self.timer setFireDate:[NSDate distantFuture]];
        _codeButton.enabled = YES;
        [_codeButton setTitle:@"重新发送" forState:UIControlStateNormal];
    }
}

- (NSTimer *)timer {
    if (_timer == nil) {
        _timer = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(countDown) userInfo:nil repeats:YES];
    }
    return _timer;
}

#pragma mark - 发送短信验证码接口
- (void)sendSMSCodeRequest {
    if ([Reachability checkNetCanUse]) {
        if (!_codeRequest) {
            _codeRequest = [[CWHttpRequest alloc] init];
        }
        [SVProgressHUD showWithStatus:@"请稍候..." maskType:SVProgressHUDMaskTypeClear];
        NSString *phone = [_phoneTextField.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];
        NSDictionary *jsonDictionary = @{@"mobile": phone, @"type": @"2"};
        [_codeRequest JSONRequestOperationWithURL:[NSString stringWithFormat:@"%@%@", HOST_URL, SendCode_URL] path:nil parameters:jsonDictionary successBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, id responseObject) {
            [SVProgressHUD dismiss];
            NSString *code = [responseObject valueForKeyWithOutNSNull:@"code"];
            if ([code integerValue]==0){
                [self getCode];
                NSLog(@"发送短信验证码成功=======%@", responseObject);
            }
        } failBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, NSError *error, id responseObject) {
            NSLog(@"发送短信验证码接口失败=======%@", responseObject);
            [ShowViewCenter netError];
        }];
    } else {
        [ShowViewCenter netNotAvailable];
    }
}
- (void)sendSMSLoginRequest {
    if ([Reachability checkNetCanUse]) {
        if (!_codeRequest) {
            _codeRequest = [[CWHttpRequest alloc] init];
        }
        [SVProgressHUD showWithStatus:@"请稍候..." maskType:SVProgressHUDMaskTypeClear];
        NSString *phone = [_phoneTextField.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];
        NSDictionary *jsonDictionary = @{@"username": phone, @"smscode":_codeTextField.text };
        [_codeRequest JSONRequestOperationWithURL:[NSString stringWithFormat:@"%@%@", HOST_URL, Verificat_Login] path:nil parameters:jsonDictionary successBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, id responseObject) {
            [SVProgressHUD dismiss];
            NSString *code = [responseObject valueForKeyWithOutNSNull:@"code"];
            if ([code integerValue]==0){
                ResetPwdSecondViewController *resetPwdSecondViewController = [[ResetPwdSecondViewController alloc] init];
                [self.navigationController pushViewController:resetPwdSecondViewController animated:YES];
            }else
            {
                [SVProgressHUD showErrorWithStatus:[responseObject valueForKeyWithOutNSNull:@"text"]];
            }
        }failBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, NSError *error, id responseObject) {
            NSLog(@"发送短信验证码接口失败=======%@", responseObject);
            [ShowViewCenter netError];
        }];
    } else {
        [ShowViewCenter netNotAvailable];
    }
}
- (IBAction)backAction:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}
-(BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
  self.backScrollView.frame=CGRectMake(0, 0, kSCREEN_WIDTH, kSCREEN_HEIGHT-216);
    return YES;
}
@end
