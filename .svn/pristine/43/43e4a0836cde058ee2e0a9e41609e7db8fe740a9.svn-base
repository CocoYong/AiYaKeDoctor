//
//  SettingTimeViewController.m
//  YSProject
//
//  Created by cuiw on 15/6/4.
//  Copyright (c) 2015年 cuiw. All rights reserved.
//

#import "SettingTimeViewController.h"
#import "TimeModel.h"
#import  "NSDate+Convenience.h"
#import "CalenderViewController.h"
#import "NSDateAdditions.h"
@interface SettingTimeViewController ()<DateDelegate>
{
    NSArray *_timeArray;
    CWHttpRequest *request;
    NSMutableArray *dataArray;
    NSMutableArray *finalArray;
}

@property (weak, nonatomic) IBOutlet UITableView *timeTableView;
@property (weak, nonatomic) IBOutlet CWTextField *startTimeField;
@property (weak, nonatomic) IBOutlet CWTextField *endTimeField;
@property (nonatomic,assign) NSInteger goInType;
@end

@implementation SettingTimeViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    [self creatNavgationBarWithTitle:@"设置预约时间"];
    [self addBackButt];
    finalArray=[NSMutableArray array];
    if (self.editOrNot) {
        NSDateFormatter *formatter=[[NSDateFormatter alloc]init];
        formatter.dateFormat=@"yyyy-MM-dd";
        NSDate *date1=[formatter dateFromString:_recieveModel.date1];
        NSDate *date2=[formatter dateFromString:_recieveModel.date2];
        [formatter setLocale:[NSLocale currentLocale]];
        [formatter setDateFormat:@"yyyy年MM月dd日"];
        NSString *date11= [formatter  stringFromDate:date1];
        NSString *date22= [formatter  stringFromDate:date2];
        self.startTimeField.text=date11;
        self.endTimeField.text=date22;
    }
    [self getDoctorWorkTime];
//    [self setTextFieldRightButt];
   
}
/*
-(void)setTextFieldRightButt
{
    UIButton *startbutt=[UIButton buttonWithType:UIButtonTypeCustom];
    startbutt.frame=CGRectMake(0, 5, 30, 20);
    [startbutt setImage:[UIImage imageNamed:@"uc_setting_icon_time"] forState:UIControlStateNormal];
    startbutt.tag=100;
     [startbutt addTarget:self action:@selector(goSettingDateController:) forControlEvents:UIControlEventTouchUpInside];
    startbutt.imageEdgeInsets=UIEdgeInsetsMake(0, 0, 0, 10);
    self.startTimeField.rightView=startbutt;
    self.startTimeField.rightViewMode=UITextFieldViewModeAlways;

    
    UIButton *endbutt=[UIButton buttonWithType:UIButtonTypeCustom];
    endbutt.frame=CGRectMake(0, 5, 30, 20);
    [endbutt setImage:[UIImage imageNamed:@"uc_setting_icon_time"] forState:UIControlStateNormal];
    endbutt.tag=200;
    [endbutt addTarget:self action:@selector(goSettingDateController:) forControlEvents:UIControlEventTouchUpInside];
    endbutt.imageEdgeInsets=UIEdgeInsetsMake(0, 0, 0, 10);
    self.endTimeField.rightView=endbutt;
    self.endTimeField.rightViewMode=UITextFieldViewModeAlways;

}
-(void)goSettingDateController:(UIButton*)butt
{
    if (butt.tag==100) {
        self.goInType=100;
        CalenderViewController *calenderController=[[CalenderViewController alloc]init];
        calenderController.titleString=@"设置开始时间";
        calenderController.delegate=self;
        [self.navigationController pushViewController:calenderController animated:YES];
    }else
    {
        self.goInType=200;
        CalenderViewController *calenderController=[[CalenderViewController alloc]init];
        calenderController.titleString=@"设置结束时间";
        calenderController.delegate=self;
        [self.navigationController pushViewController:calenderController animated:YES];
    }
   
}
*/
//获得医生工作时间段 按照日期
- (void)getDoctorWorkTime{
    if ([Reachability checkNetCanUse]) {
        if (!request) {
            request = [[CWHttpRequest alloc] init];
        }
        [SVProgressHUD showWithStatus:@"正在请求数据..." maskType:SVProgressHUDMaskTypeClear];
        [request JSONRequestOperationWithURL:[NSString stringWithFormat:@"%@%@", HOST_URL, WorkTimeData] path:nil parameters:nil successBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, id responseObject) {
            NSLog(@"时间段接口成功%@", responseObject);
            [SVProgressHUD dismiss];
            NSString *code = [responseObject valueForKeyWithOutNSNull:@"code"];
            if ([code integerValue]==0){
                dataArray=[[responseObject objectForKey:@"data"] mutableCopy];
                [self.timeTableView reloadData];
            }
        } failBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, NSError *error, id responseObject) {
            NSLog(@"时间段接口失败=======%@", responseObject);
            [ShowViewCenter netError];
        }];
    } else {
        [ShowViewCenter netNotAvailable];
    }
}
- (void)setWorkTime:(NSDate*)date1 andDate:(NSDate*)date2 andOldDate1:(NSDate*)oldDate1 andOldDate2:(NSDate*)oldDate2 andwTimes:(NSMutableArray*)timesArray andDtype:(NSInteger)type{
    if ([Reachability checkNetCanUse]) {
        if (!request) {
            request = [[CWHttpRequest alloc] init];
        }
        [SVProgressHUD showWithStatus:@"正在请求数据..." maskType:SVProgressHUDMaskTypeClear];
        NSString *sessionID=[UserManager currentUserManager].sessionID;
        NSString *arrayString=[timesArray componentsJoinedByString:@","];
        NSDictionary *jsonDictionary = @{@"date1":date1,@"date2":date2,@"SessionID":sessionID,@"oldDate1":oldDate1==nil?@"":oldDate1,@"oldDate2":oldDate2==nil?@"":oldDate2,@"dType":[NSNumber numberWithInteger:type],@"wTimes":arrayString};
        [request JSONRequestOperationWithURL:[NSString stringWithFormat:@"%@%@", HOST_URL, SetWorkTime] path:nil parameters:jsonDictionary successBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, id responseObject) {
            NSLog(@"添加编辑工作时间接口成功%@", responseObject);
            [SVProgressHUD dismiss];
            NSString *code = [responseObject valueForKeyWithOutNSNull:@"code"];
            [UserManager currentUserManager].sessionID=[responseObject objectForKey:@"SessionID"];
            if ([code integerValue]==0){
                [[UpdateUserData shareInstance] updateUserInfo];
            }else
            {
                [SVProgressHUD showErrorWithStatus:[responseObject valueForKeyWithOutNSNull:@"text"]];
            }
        } failBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, NSError *error, id responseObject) {
            NSLog(@"添加编辑工作时间接口失败=======%@", responseObject);
            [ShowViewCenter netError];
        }];
    } else {
        [ShowViewCenter netNotAvailable];
    }
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return [dataArray count]+1;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *CellIdentifier = @"CELL";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];
        [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
        
    }else
    {
        for (id view in cell.contentView.subviews) {
            [view removeFromSuperview];
        }
    }
    if (indexPath.row==0) {
      cell.textLabel.text=@"选择时段";
    }else
    {
        UIButton *selectedButt=[UIButton buttonWithType:UIButtonTypeCustom];
        selectedButt.frame=CGRectMake(kSCREEN_WIDTH-80, 10, 20, 20);
        selectedButt.tag=indexPath.row;
        [selectedButt setBackgroundImage:[UIImage imageNamed:@"0_74"] forState:UIControlStateNormal];
        [selectedButt setBackgroundImage:[UIImage imageNamed:@"0_71"] forState:UIControlStateSelected];
        [selectedButt addTarget:self action:@selector(itemSelected:) forControlEvents:UIControlEventTouchUpInside];
        [cell.contentView addSubview:selectedButt];
         cell.textLabel.text = [NSString stringWithFormat:@"%@-%@",[dataArray[indexPath.row-1]  objectForKey:@"time1"],[dataArray[indexPath.row-1]  objectForKey:@"time2"]];
        if (self.editOrNot) {
            for (TimeModel *timeModel in _recieveModel.time) {
                NSString *timeString=[NSString stringWithFormat:@"%@-%@",timeModel.time1,timeModel.time2];
                if ([timeString isEqualToString:cell.textLabel.text]) {
                    selectedButt.selected=YES;
                }
            }
        }
    }
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 40;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
}
-(void)itemSelected:(UIButton*)butt
{
    butt.selected=!butt.selected;
    if (butt.selected) {
        [finalArray addObject:[finalArray objectAtIndex:butt.tag-1]];
    }else
    {
        if ([finalArray containsObject:[finalArray objectAtIndex:butt.tag-1]]) {
            [finalArray removeObject:[finalArray objectAtIndex:butt.tag-1]];
        }
    }

}
- (IBAction)commitButtAction:(UIButton *)sender {
    if (self.editOrNot) {
        NSDate *tempDate1=[NSDate dateFromString:_startTimeField.text format:@"YYYY-MM-dd"];
        NSDate *tempDate2=[NSDate dateFromString:_endTimeField.text format:@"YYYY-MM-dd"];
        NSDate *oldDate1=[NSDate dateFromString:_recieveModel.date1 format:@"YYYY-MM-dd"];
        NSDate *oldDate2=[NSDate dateFromString:_recieveModel.date2 format:@"YYYY-MM-dd"];
        [self setWorkTime:tempDate1 andDate:tempDate2 andOldDate1:oldDate1 andOldDate2:oldDate2 andwTimes:finalArray andDtype:1];
    }else
    {
       
        NSDate *tempDate1=[NSDate dateFromString:_startTimeField.text format:@"YYYY年MM月dd日"];
        NSDate *passDate1=[tempDate1 cc_dateByMovingToNextDay:tempDate1];
        NSDate *tempDate2=[NSDate dateFromString:_endTimeField.text format:@"YYYY年MM月dd日"];
        NSDate *passDate2=[tempDate2 cc_dateByMovingToNextDay:tempDate2];
        [self setWorkTime:passDate1 andDate:passDate2 andOldDate1:nil andOldDate2:nil andwTimes:finalArray andDtype:0];
    }
}
-(void)passRetureDate:(NSDate *)date
{
     NSString *dateString=[NSDate stringFromDate:date format:@"YYYY年MM月dd日"];
    if (self.goInType==100) {
       self.startTimeField.text=dateString;
    }if (self.goInType==200) {
        self.endTimeField.text=dateString;
    }
}

- (IBAction)beginJumpSelectedDate:(id)sender {
    self.goInType=100;
    CalenderViewController *calenderController=[[CalenderViewController alloc]init];
    calenderController.titleString=@"设置开始时间";
    calenderController.delegate=self;
    [self.navigationController pushViewController:calenderController animated:YES];
}

- (IBAction)overJumpSelectedDate:(id)sender {
    self.goInType=200;
    CalenderViewController *calenderController=[[CalenderViewController alloc]init];
    calenderController.titleString=@"设置结束时间";
    calenderController.delegate=self;
    [self.navigationController pushViewController:calenderController animated:YES];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
@end
