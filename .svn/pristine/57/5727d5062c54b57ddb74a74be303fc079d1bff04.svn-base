//
//  EvaluateViewController.m
//  YSProject
//
//  Created by cuiw on 15/5/31.
//  Copyright (c) 2015年 cuiw. All rights reserved.
//

#import "EvaluateViewController.h"
#import "MyEvaluatPatientCell.h"
#import "MyRecieveEvaluateCell.h"
#import "OneSpecialCell.h"
#import "UserModel.h"
#import "TabBarViewController.h"
#import "SDWebImageDownloader.h"
@interface EvaluateViewController ()
{
    UIView *_headerView;
    UIButton *_leftButton;
    UIButton *_rightButton;
    UIButton *detailButt;
    CWHttpRequest *request;
    NSInteger totalDataNum;
    NSInteger morePage;
    NSMutableArray *dataArray;
    NSIndexPath *index;
    
}
@property(nonatomic,strong)UserModel *userModel;
@property(nonatomic,strong)MyRecieveEvaluateCell *evaluatHeightCell;
@end

@implementation EvaluateViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    [self creatNavgationBarWithTitle:@"患者评价"];
    [self addBackButt];
    self.edgesForExtendedLayout=UIRectEdgeNone;
//    _userDic=[[CWNSFileUtil sharedInstance] getNSModelFromUserDefaultsWithKey:@"userData"];
    _userModel=[UserManager currentUserManager].user;
   
    [_contentTableView registerNib:[UINib nibWithNibName:@"MyEvaluatPatientCell" bundle:nil] forCellReuseIdentifier:@"MyEvaluatPatientCell"];
    [_contentTableView registerNib:[UINib nibWithNibName:@"OneSpecialCell" bundle:nil] forCellReuseIdentifier:@"OneSpecialCell"];
    NSLog(@"sessionID===%@",[UserManager currentUserManager].sessionID);
    //实例化一个cell
    self.evaluatHeightCell=[[MyRecieveEvaluateCell alloc]init];
    [self creatTableHeaderView];
    [self getEvaluateMeServiceDataFromServicePage:1 andRefresh:YES];
    _leftButton.selected=YES;
    _rightButton.selected=NO;
  
}
-(void)getEvaluateMeServiceDataFromServicePage:(NSInteger)page andRefresh:(BOOL)refresh
{
    if ([Reachability checkNetCanUse]) {
        if (!request) {
            request = [[CWHttpRequest alloc] init];
        }
        [SVProgressHUD showWithStatus:@"正在请求数据..." maskType:SVProgressHUDMaskTypeClear];
       NSString *sessionID=[UserManager currentUserManager].sessionID;
        NSDictionary *jsonDictionary = @{@"stype":@"0", @"SessionID": sessionID,@"page":[NSNumber numberWithInteger:page],@"size":@"5",@"dIsComment":[NSNumber numberWithInteger:1]};
        [request JSONRequestOperationWithURL:[NSString stringWithFormat:@"%@%@", HOST_URL, SearchOrder] path:nil parameters:jsonDictionary successBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, id responseObject) {
            [SVProgressHUD dismiss];
            NSString *code = [responseObject valueForKeyWithOutNSNull:@"code"];
           [UserManager currentUserManager].sessionID=[responseObject objectForKey:@"SessionID"];
            NSLog(@"评价接口成功=======%@", responseObject);
            if ([code integerValue]==0){
                totalDataNum=[[[responseObject objectForKey:@"data"] objectForKey:@"total"] integerValue];
                if (refresh) {
                    [dataArray removeAllObjects];
                    dataArray=[[[responseObject objectForKey:@"data"] objectForKey:@"rs"] mutableCopy];
                    [self.contentTableView.header endRefreshing];
                }else
                {
                    [dataArray addObjectsFromArray:[[responseObject objectForKey:@"data"] objectForKey:@"rs"]];
                }
                [self.contentTableView reloadData];
            }
        } failBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, NSError *error, id responseObject) {
            NSLog(@"评价接口失败=======%@", responseObject);
            [ShowViewCenter netError];
        }];
    } else {
        [ShowViewCenter netNotAvailable];
    }
}
-(void)getMeEvaluatPatientServiceDataFromServicePage:(NSInteger)page andRefresh:(BOOL)refresh
{
    if ([Reachability checkNetCanUse]) {
        if (!request) {
            request = [[CWHttpRequest alloc] init];
        }
        [SVProgressHUD showWithStatus:@"正在请求数据..." maskType:SVProgressHUDMaskTypeClear];
        NSString *sessionID=[UserManager currentUserManager].sessionID;
        NSDictionary *jsonDictionary = @{@"stype":@"0", @"SessionID": sessionID,@"page":[NSNumber numberWithInteger:page],@"size":@"5",@"uIsComment":[NSNumber numberWithInteger:1]};
        [request JSONRequestOperationWithURL:[NSString stringWithFormat:@"%@%@", HOST_URL, SearchOrder] path:nil parameters:jsonDictionary successBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, id responseObject) {
            [SVProgressHUD dismiss];
            NSString *code = [responseObject valueForKeyWithOutNSNull:@"code"];
            [UserManager currentUserManager].sessionID=[responseObject objectForKey:@"SessionID"];
            NSLog(@"评价接口成功=======%@", responseObject);
            if ([code integerValue]==0){
                totalDataNum=[[[responseObject objectForKey:@"data"] objectForKey:@"total"] integerValue];
                if (refresh) {
                    [dataArray removeAllObjects];
                    dataArray=[[[responseObject objectForKey:@"data"] objectForKey:@"rs"] mutableCopy];
                    [self.contentTableView.header endRefreshing];
                }else
                {
                    [dataArray addObjectsFromArray:[[responseObject objectForKey:@"data"] objectForKey:@"rs"]];
                }
                [self.contentTableView reloadData];
            }
        } failBlock:^(NSURLRequest *request, NSHTTPURLResponse *response, NSError *error, id responseObject) {
            NSLog(@"评价接口失败=======%@", responseObject);
            [ShowViewCenter netError];
        }];
    } else {
        [ShowViewCenter netNotAvailable];
    }
}

-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [(TabBarViewController*)self.tabBarController  tabbarImageView].hidden=YES;
}
-(void)creatTableHeaderView
{
    _headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kSCREEN_WIDTH, 50)];
    _headerView.backgroundColor = [CWNSFileUtil colorWithHexString:@"#eeeeee"];
    
    _leftButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [_leftButton setTitle:@"我收到的评价(101)" forState:UIControlStateNormal];
    _leftButton.frame = CGRectMake(0, 10, kSCREEN_WIDTH/2, 30);
    _leftButton.titleLabel.font = [UIFont systemFontOfSize:14];
    [_leftButton setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
    [_leftButton setTitleColor:[UIColor blackColor] forState:UIControlStateSelected];
    [_leftButton addTarget:self action:@selector(segmentButtonAction:) forControlEvents:UIControlEventTouchUpInside];
    UIView *lineView = [[UIView alloc] initWithFrame:CGRectMake(kSCREEN_WIDTH/2 - 1, 15, 1, 20)];
    lineView.backgroundColor = [UIColor grayColor];
    
    _rightButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [_rightButton setTitle:@"我给出的评价(110)" forState:UIControlStateNormal];
    _rightButton.frame = CGRectMake(kSCREEN_WIDTH/2, 10, kSCREEN_WIDTH/2 - 1, 30);
    _rightButton.titleLabel.font = [UIFont systemFontOfSize:14];
    [_rightButton setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
    [_rightButton setTitleColor:[UIColor blackColor] forState:UIControlStateSelected];
    [_rightButton addTarget:self action:@selector(segmentButtonAction:) forControlEvents:UIControlEventTouchUpInside];
    [_headerView addSubview:_leftButton];
    [_headerView addSubview:_rightButton];
    [_headerView addSubview:lineView];
    _contentTableView.tableHeaderView = _headerView;
    
    [self.contentTableView addLegendHeaderWithRefreshingTarget:self refreshingAction:@selector(refreshData)];
    [self.contentTableView addLegendFooterWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];
}
-(void)refreshData
{
    if (_leftButton.selected) {
        [self getEvaluateMeServiceDataFromServicePage:1 andRefresh:YES];
    }else
    {
        [self getMeEvaluatPatientServiceDataFromServicePage:1 andRefresh:YES];
    }
    
}
-(void)loadMoreData
{
    morePage++;
    if (dataArray.count==totalDataNum){
        [self.contentTableView.footer noticeNoMoreData];
    }else
    {
        if (_leftButton.selected) {
            [self getEvaluateMeServiceDataFromServicePage:morePage andRefresh:NO];
        }
        if (_rightButton.selected) {
            [self getMeEvaluatPatientServiceDataFromServicePage:morePage andRefresh:NO];
        }
    }
}
- (void)segmentButtonAction:(UIButton *)button {
    if (button==_leftButton) {
        if (!button.selected) {
          button.selected=!button.selected;
            _rightButton.selected=NO;
            [self getEvaluateMeServiceDataFromServicePage:1 andRefresh:YES];
        }
    }if (button==_rightButton) {
        if (!button.selected) {
            button.selected=!button.selected;
            _leftButton.selected=NO;
            [self getMeEvaluatPatientServiceDataFromServicePage:1 andRefresh:YES];
        }
    }
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if (_leftButton.selected) {
        return dataArray.count+1;
    }else{
        return dataArray.count;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (_leftButton.selected){
        if (indexPath.row==0) {
            if (_expand) {
                OneSpecialCell*  cell = [tableView dequeueReusableCellWithIdentifier:@"OneSpecialCell"];
                [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
                cell.controller=self;
                [cell configeCellDataWith:_userModel];
                return cell;
            }else
            {
                UITableViewCell *cell=[tableView dequeueReusableCellWithIdentifier:@"cell"];
                if (!cell) {
                    cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"cell"];
                }else
                {
                    for (id view in cell.contentView.subviews) {
                        [view removeFromSuperview];
                    }
                }
                cell.backgroundColor=[CWNSFileUtil colorWithHexString:@"#eeeeee"];
                UILabel *mainLabel=[[UILabel alloc]initWithFrame:CGRectMake(10, 10, 56, 13)];
                mainLabel.text=@"总体评价:";
                mainLabel.font=[UIFont systemFontOfSize:13];
                [cell.contentView addSubview:mainLabel];
                UIImageView *imageView=[[UIImageView alloc]initWithFrame:CGRectMake(77, 10, 85, 13)];
                imageView.image=[UIImage imageNamed:[NSString stringWithFormat:@"star%@",[_userModel valueForKey:@"totalGrade"]]];
                [cell.contentView addSubview:imageView];
                UILabel *scoreLabel=[[UILabel alloc]initWithFrame:CGRectMake(170, 10, 40, 13)];
                scoreLabel.text=[NSString stringWithFormat:@"%@分",[_userModel valueForKey:@"totalGrade"]];
                [cell.contentView addSubview:scoreLabel];
                
                
                
                detailButt=[UIButton buttonWithType:UIButtonTypeCustom];
                detailButt.frame=CGRectMake(kSCREEN_WIDTH-70, 10, 50, 21);
                [detailButt setBackgroundImage:[UIImage imageNamed:@"0_152"] forState:UIControlStateNormal];
                [detailButt setBackgroundImage:[UIImage imageNamed:@"0_152"] forState:UIControlStateSelected];
                [detailButt setTitle:@"详情" forState:UIControlStateNormal];
                detailButt.titleLabel.font=[UIFont systemFontOfSize:14];
                [detailButt addTarget:self action:@selector(expandButtAction:) forControlEvents:UIControlEventTouchUpInside];
                [cell.contentView addSubview:detailButt];
                return cell;
            }
        }else
        {
            MyRecieveEvaluateCell *cell;
            if (!cell) {
                [_contentTableView registerNib:[UINib nibWithNibName:@"MyRecieveEvaluateCell" bundle:nil] forCellReuseIdentifier:@"MyRecieveEvaluateCell"];
                cell = [tableView dequeueReusableCellWithIdentifier:@"MyRecieveEvaluateCell"];
            }else
            {
                for (id view in cell.contentView.subviews) {
                    [view removeFromSuperview];
                }
            }
            cell.expandButt.tag=indexPath.row;
            [cell configeCellData:[dataArray objectAtIndex:indexPath.row-1]];
            [cell.expandButt addTarget:self action:@selector(cellExpandButtAction:) forControlEvents:UIControlEventTouchUpInside];
            [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
            return cell;
          
            
            /*
            UITableViewCell *cell=[tableView dequeueReusableCellWithIdentifier:@"cell"];
            if (!cell) {
                cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"cell"];
            }
            UIView  *backView=[[UIView alloc]initWithFrame:CGRectMake(10, 8, kSCREEN_WIDTH-20, 120)];
            backView.backgroundColor=[UIColor clearColor];
            backView.layer.cornerRadius=5.0f;
            backView.layer.borderColor=[UIColor lightGrayColor].CGColor;
            backView.layer.borderWidth=1.0f;
            [cell.contentView addSubview:backView];
            
            
            UIImageView *imageView=[[UIImageView alloc]initWithFrame:CGRectMake(10, 10, 50, 50)];
            [[SDWebImageDownloader sharedDownloader] downloadImageWithURL:[NSURL URLWithString:[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"dPicUrl"]] options:SDWebImageDownloaderLowPriority progress:^(NSInteger receivedSize, NSInteger expectedSize) {
                //        NSLog(@"receivedSize===%ld,expectedSize===%ld",(long)receivedSize,(long)expectedSize);
            } completed:^(UIImage *image, NSData *data, NSError *error, BOOL finished) {
                imageView.image=image;
            }];
            [backView addSubview:imageView];
            
            UILabel *titleLabel=[[UILabel alloc]initWithFrame:CGRectMake(70, 10, kSCREEN_WIDTH-90, 21)];
            titleLabel.text=[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"dName"];
            [backView addSubview:titleLabel];
            
            
            UIImageView *starView=[[UIImageView alloc]initWithFrame:CGRectMake(70, 44, 100, 16)];
            starView.image=[UIImage imageNamed:[NSString stringWithFormat:@"star%@",[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"dGrade"]]];
            [backView addSubview:starView];
            
            UILabel  *timeLabel=[[UILabel alloc]initWithFrame:CGRectMake(180, 39, kSCREEN_WIDTH-210, 21)];
            timeLabel.text=[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"createTime"];
            [backView addSubview:timeLabel];
            
            UILabel  *serviceName=[[UILabel alloc]initWithFrame:CGRectMake(70, 65, 56, 21)];
            serviceName.text=@"服务态度:";
            serviceName.tag=100;
            serviceName.hidden=YES;
            [backView addSubview:serviceName];
            UILabel  *serviceScore=[[UILabel alloc]initWithFrame:CGRectMake(130, 65, 56, 21)];
            serviceScore.text=[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"dGrade1"];
            serviceScore.tag=101;
            serviceScore.hidden=YES;
            [backView addSubview:serviceScore];
            
            
            
            UILabel  *skillName=[[UILabel alloc]initWithFrame:CGRectMake(180, 65, 56, 21)];
            skillName.text=@"专业水平:";
            skillName.tag=102;
            skillName.hidden=YES;
            [backView addSubview:skillName];
            UILabel  *skillScore=[[UILabel alloc]initWithFrame:CGRectMake(250, 65, 56, 21)];
            skillScore.text=[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"dGrade2"];
            skillScore.tag=103;
            skillScore.hidden=YES;
            [backView addSubview:skillScore];
            
            
            
            
            UILabel  *environmentName=[[UILabel alloc]initWithFrame:CGRectMake(70, 71, 56, 21)];
            environmentName.text=@"就医环境:";
            environmentName.tag=104;
            environmentName.hidden=YES;
            [backView addSubview:environmentName];
            
            UILabel  *environmentScore=[[UILabel alloc]initWithFrame:CGRectMake(130, 39, kSCREEN_WIDTH-210, 21)];
            environmentScore.text=[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"dGrade3"];
            environmentScore.tag=105;
            environmentScore.hidden=YES;
            [backView addSubview:environmentScore];
            
            UILabel  *noExpandLabel=[[UILabel alloc]initWithFrame:CGRectMake(70, 65, kSCREEN_WIDTH-100, 42)];
            noExpandLabel.text=[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"dComment"];
            noExpandLabel.numberOfLines=2;
            noExpandLabel.lineBreakMode=NSLineBreakByTruncatingTail;
            noExpandLabel.tag=106;
            [backView addSubview:noExpandLabel];
            
            UIButton *expandButt=[UIButton buttonWithType:UIButtonTypeCustom];
            expandButt.frame=CGRectMake(10, 65, 50, 21);
            expandButt.tag=indexPath.row;
            [expandButt setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
            [expandButt setTitle:@"expand" forState:UIControlStateSelected];
            [expandButt setTitle:@"unExpand" forState:UIControlStateNormal];
            [expandButt addTarget:self action:@selector(cellExpandButtAction:) forControlEvents:UIControlEventTouchUpInside];
            [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
            [backView addSubview:expandButt];
            
            UIView *lineView=[[UIView alloc]initWithFrame:CGRectMake(10, 110, kSCREEN_WIDTH-20, 1)];
            lineView.tag=1000;
            [backView addSubview:lineView];
            
            UILabel *expandLabel=[[UILabel alloc]initWithFrame:CGRectMake(10, 115, kSCREEN_WIDTH-40, 100)];
            expandLabel.text=[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"dComment"];
            expandLabel.tag=1001;

            
            if ([[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"expand"]isEqualToString:@"1"]){
                serviceName.hidden=NO;
                serviceScore.hidden=NO;
                skillName.hidden=NO;
                skillScore.hidden=NO;
                environmentName.hidden=NO;
                environmentScore.hidden=NO;
                expandLabel.hidden=NO;
                noExpandLabel.hidden=YES;
                backView.frame=CGRectMake(10, 8, kSCREEN_WIDTH-20,CGRectGetMaxY(expandLabel.frame)+10);
            }else
            {
                serviceName.hidden=YES;
                serviceScore.hidden=YES;
                skillName.hidden=YES;
                skillScore.hidden=YES;
                environmentName.hidden=YES;
                environmentScore.hidden=YES;
                expandLabel.hidden=YES;
                noExpandLabel.hidden=NO;
                backView.frame=CGRectMake(10, 8, kSCREEN_WIDTH-20,120);
              
            }
            [cell.contentView layoutIfNeeded];
            [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
            return cell;
             */
        }
     }else {
         MyEvaluatPatientCell * cell = [tableView dequeueReusableCellWithIdentifier:@"MyEvaluatPatientCell"];
              [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
        return cell;
    }
    return nil;
}
- (CGFloat)tableView:(UITableView *)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 160;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if (_leftButton.selected) {
        if (indexPath.row==0) {
            if (_expand) {
                return 103;
            }else
            {
             return 33;
            }
        }else
        {
            if ([[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"expand"]isEqualToString:@"1"]) {
                NSString *string=[[dataArray objectAtIndex:indexPath.row-1] objectForKey:@"dComment"];
                CGRect  rect=[string boundingRectWithSize:CGSizeMake(kSCREEN_WIDTH-40, 3000) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:14]} context:nil];
                  return   rect.size.height+125;
            }else
            {
                return 135;
            }
        }
    } else {
        return 128;
    }
}
- (void)cellExpandButtAction:(UIButton *)sender{
    sender.selected=!sender.selected;

    MyRecieveEvaluateCell *cell=(MyRecieveEvaluateCell*)[_contentTableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:sender.tag inSection:0]];
    index=[NSIndexPath indexPathForRow:sender.tag inSection:0];
    if (sender.selected){
        cell.fuwuTaiduLabel.hidden=NO;
        cell.fuwuTaiduFen.hidden=NO;
        cell.zhuanyeShuipinLabel.hidden=NO;
        cell.zhuanyeShuiPinFen.hidden=NO;
        cell.jiuyiHuanJingLabel.hidden=NO;
        cell.jiuyiHuanJingFen.hidden=NO;
        cell.expandDetailLabel.hidden=NO;
        cell.lineView.hidden=NO;
        cell.noExpandDetailLabel.hidden=YES;
        [cell.expandButt setImage:[UIImage imageNamed:@"icon_nearby_up"] forState:UIControlStateNormal];
        NSMutableDictionary *dic=[[dataArray objectAtIndex:sender.tag-1] mutableCopy];
        [dic setObject:@"1" forKey:@"expand"];
        [dataArray replaceObjectAtIndex:sender.tag-1 withObject:dic];
    }if (!sender.selected)
    {
        cell.fuwuTaiduLabel.hidden=YES;
        cell.fuwuTaiduFen.hidden=YES;
        cell.zhuanyeShuipinLabel.hidden=YES;
        cell.zhuanyeShuiPinFen.hidden=YES;
        cell.jiuyiHuanJingLabel.hidden=YES;
        cell.jiuyiHuanJingFen.hidden=YES;
        cell.expandDetailLabel.hidden=YES;
        cell.lineView.hidden=YES;
        cell.noExpandDetailLabel.hidden=NO;
         [cell.expandButt setImage:[UIImage imageNamed:@"icon_nearby_down"] forState:UIControlStateNormal];
        NSMutableDictionary *dic=[[dataArray objectAtIndex:sender.tag-1] mutableCopy];
        [dic setObject:@"0" forKey:@"expand"];
        [dataArray replaceObjectAtIndex:sender.tag-1 withObject:dic];
    }
//    [self.contentTableView reloadData];
   
    /*
    UITableViewCell *cell=[_contentTableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:sender.tag inSection:0]];
    if (sender.selected) {
        for (int i=100; i<107; i++) {
            UILabel *label=(UILabel*)[cell.contentView viewWithTag:i];
            label.hidden=NO;
            if (i==106) {
                label.hidden=YES;
            }
        }
        NSMutableDictionary *dic=[[dataArray objectAtIndex:sender.tag-1] mutableCopy];
        [dic setObject:@"1" forKey:@"expand"];
        [dataArray replaceObjectAtIndex:sender.tag-1 withObject:dic];
    }else
    {
        for (int i=100; i<107; i++) {
            UILabel *label=(UILabel*)[cell.contentView viewWithTag:i];
            label.hidden=YES;
            if (i==106) {
                label.hidden=NO;
            }
        }
        NSMutableDictionary *dic=[[dataArray objectAtIndex:sender.tag-1] mutableCopy];
        [dic setObject:@"0" forKey:@"expand"];
        [dataArray replaceObjectAtIndex:sender.tag-1 withObject:dic];
    }
     */
    [self.contentTableView reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:sender.tag-1 inSection:0]] withRowAnimation:UITableViewRowAnimationAutomatic];
}
-(void)expandButtAction:(UIButton*)butt
{
    self.expand=YES;
    [self.contentTableView reloadData];
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
//    if (!_flag) {
//        [self.navigationController pushViewController:notificationDetailVC animated:YES];
//    } else {
//        [self.navigationController pushViewController:announcementDetailVC animated:YES];
//    }
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
@end
